<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <groupId>org.kuali.maven.plugins</groupId>
  <artifactId>license-maven-plugin</artifactId>
  <packaging>maven-plugin</packaging>
  <version>1.6.4-nca-10-SNAPSHOT</version>
  
  <name>License Maven Plugin</name>
  <description>Maven plugin to download and collect license files from project dependencies.</description>
  <url>https://github.com/netceteragroup/license-maven-plugin</url>
  <inceptionYear>2010</inceptionYear>
  
  <organization>
    <name>Netcetera</name>
    <url>http://netcetera.ch/</url>
  </organization>
  
  <prerequisites>
    <maven>2.2.1</maven>
  </prerequisites>

  <licenses>
    <license>
      <name>Educational Community License, Version 2.0</name>
      <url>http://www.opensource.org/licenses/ecl2.txt</url>
    </license>
  </licenses>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/netceteragroup/license-maven-plugin/issues</url>
  </issueManagement>
  <scm>
    <url>https://github.com/netceteragroup/license-maven-plugin</url>
    <connection>scm:git:git://github.com/netceteragroup/license-maven-plugin.git</connection>
    <developerConnection>scm:git:git://github.com/netceteragroup/license-maven-plugin.git</developerConnection>
    <tag>HEAD</tag>
  </scm>
  <ciManagement>
    <system>Travis CI</system>
    <url>https://travis-ci.org/netceteragroup/license-maven-plugin</url>
  </ciManagement>  
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <source.version>1.7</source.version>
    <target.version>1.7</target.version>
    
    <!-- dependency versions -->
    <spring-core.version>3.2.14.RELEASE</spring-core.version>
    <nuiton-processor.version>1.3</nuiton-processor.version>
    <commons-collections.version>3.2.1</commons-collections.version>
    <commons-lang.version>2.6</commons-lang.version>
    <commons-io.version>2.4</commons-io.version>
    <slf4j.version>1.7.12</slf4j.version>
    <maven-compat.version>3.0.4</maven-compat.version>
    <junit.version>4.10</junit.version>
    
    <!-- plugin versions -->
    <plexus-maven-plugin.version>1.3.8</plexus-maven-plugin.version>
    <plexus-component-metadata.version>1.5.5</plexus-component-metadata.version>
    <maven-dependency-plugin.version>2.3</maven-dependency-plugin.version>
    <maven-plugin-plugin.version>3.3</maven-plugin-plugin.version>
    <maven-project-info-reports-plugin.version>2.7</maven-project-info-reports-plugin.version>
    <lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>
    <jacoco-maven-plugin.version>0.7.2.201409121644</jacoco-maven-plugin.version>
    <coveralls-maven-plugin.version>3.1.0</coveralls-maven-plugin.version>
  </properties>
  
  <dependencies>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring-core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.nuiton.processor</groupId>
      <artifactId>nuiton-processor</artifactId>
      <version>${nuiton-processor.version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>${commons-collections.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>${commons-lang.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-compat</artifactId>
      <version>${maven-compat.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${source.version}</source>
          <target>${target.version}</target>
        </configuration>
      </plugin>
      <!-- expose new plexus components -->
      <plugin>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-component-metadata</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>generate-metadata</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-maven-plugin</artifactId>
        <version>${plexus-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>create-component-descriptor</id>
            <goals>
              <goal>descriptor</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-plugin-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>helpmojo</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <version>${coveralls-maven-plugin.version}</version>
        <!--The Coveralls API token is made available as 'repoToken' env variable by Travis CI (see .travis.yml for secure-->
        <!--env). If it weren't you could define it here and reference some property from your settings.xml.-->
        <!--<configuration>-->
          <!--<repoToken>${coveralls.valdr-bean-validation.token}</repoToken>-->
        <!--</configuration>-->
      </plugin>
      <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <executions>
              <execution>
                  <id>prepare-agent</id>
                  <goals>
                      <goal>prepare-agent</goal>
                  </goals>
              </execution>
          </executions>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.plexus</groupId>
          <artifactId>plexus-component-metadata</artifactId>
          <version>${plexus-component-metadata.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven-dependency-plugin.version}</version>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings 
          only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>${lifecycle-mapping.version}</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>
                      org.apache.maven.plugins
                    </groupId>
                    <artifactId>
                      maven-plugin-plugin
                    </artifactId>
                    <versionRange>[3.2,)</versionRange>
                    <goals>
                      <goal>helpmojo</goal>
                      <goal>descriptor</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.plexus</groupId>
                    <artifactId>
                      plexus-maven-plugin
                    </artifactId>
                    <versionRange>[1.3.8,)</versionRange>
                    <goals>
                      <goal>descriptor</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>

    </pluginManagement>
  </build>

  <reporting>
    <plugins>
      <!-- Apache plugins in alphabetical order -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>${maven-plugin-plugin.version}</version>
        <configuration>
          <requirements>
            <!-- NOTE: Maven 2.x does not interpolate properties of the form project.*|pom.* 
              so the Maven Plugin Plugin gets garbage when manually examining the config 
              of the Maven Compiler Plugin. -->
            <jdk>${mojo.java.target}</jdk>
          </requirements>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven-project-info-reports-plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>cim</report>
              <report>dependency-info</report>
              <report>index</report>
              <report>issue-tracking</report>
              <report>mailing-list</report>
              <report>project-team</report>
              <report>scm</report>
              <report>summary</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
</project>
